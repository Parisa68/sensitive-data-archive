name: Build PR container

on:
  push:
  pull_request:
    paths-ignore:
      - ".gitignore"
      - "**/*.md"
      - ".github/dependabot.yaml"
      - "charts/**"
      - "Makefile"
      - "sda-admin/**"

env:
  PR_NUMBER: ${{ github.event.number }}

jobs:

  build_server_images:
    name: Build PR image (servers)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container for postgres
        uses: docker/build-push-action@v6
        with:
          context: ./postgresql
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:sha-${{ github.sha }}-postgres
            ghcr.io/${{ github.repository }}:PR${{ github.event.number }}-postgres
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build container for rabbitmq
        uses: docker/build-push-action@v6
        with:
          context: ./rabbitmq
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:sha-${{ github.sha }}-rabbitmq
            ghcr.io/${{ github.repository }}:PR${{ github.event.number }}-rabbitmq
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Run Trivy vulnerability scanner on postgres
        uses: aquasecurity/trivy-action@0.29.0
        env:
          TRIVY_SKIP_DB_UPDATE: true
          TRIVY_SKIP_JAVA_DB_UPDATE: true
        with:
          image-ref: ghcr.io/${{ github.repository }}:sha-${{ github.sha }}-postgres
          format: "sarif"
          hide-progress: true
          ignore-unfixed: true
          output: 'postgres-results.sarif'
          severity: "CRITICAL,HIGH"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'postgres-results.sarif'
          category: postgres

      - name: Run Trivy vulnerability scanner on rabbitmq
        uses: aquasecurity/trivy-action@0.29.0
        env:
          TRIVY_SKIP_DB_UPDATE: true
          TRIVY_SKIP_JAVA_DB_UPDATE: true
        with:
          image-ref: ghcr.io/${{ github.repository }}:sha-${{ github.sha }}-rabbitmq
          format: "sarif"
          hide-progress: true
          ignore-unfixed: true
          output: 'rabbitmq-results.sarif'
          severity: "CRITICAL,HIGH"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'rabbitmq-results.sarif'
          category: rabbitmq

  build_java_images:
    name: Build PR image (java)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: create maven settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id":"github-fega-norway",
              "username": "${{github.actor}}",
              "password": "${{ secrets.GITHUB_TOKEN }}"
            }]

      - name: Copy settings.xml to sda-doa root
        shell: bash
        run: cp /home/runner/.m2/settings.xml ./sda-doa/settings.xml

      - name: Build container for sda-doa
        uses: docker/build-push-action@v6
        with:
          context: ./sda-doa
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:sha-${{ github.sha }}-doa
            ghcr.io/${{ github.repository }}:PR${{ github.event.number }}-doa
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Run Trivy vulnerability scanner on doa
        uses: aquasecurity/trivy-action@0.29.0
        env:
          TRIVY_SKIP_DB_UPDATE: true
          TRIVY_SKIP_JAVA_DB_UPDATE: true
        with:
          image-ref: ghcr.io/${{ github.repository }}:sha-${{ github.sha }}-doa
          format: "sarif"
          hide-progress: true
          ignore-unfixed: true
          output: 'doa-results.sarif'
          severity: "CRITICAL,HIGH"

  sda-doa:
    needs:
      - build_java_images
      - build_server_images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        storage: [s3, posix]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: create maven settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id":"github-fega-norway",
              "username": "${{github.actor}}",
              "password": "${{ secrets.GITHUB_TOKEN }}"
            }]

      - name: Copy settings.xml to sda-doa root
        shell: bash
        run: cp /home/runner/.m2/settings.xml ./sda-doa/settings.xml

      - name: Test sda-doa for ${{ matrix.storage-type }} storage
        run: docker compose -f ../.github/integration/sda-doa-${{ matrix.storage-type }}-outbox.yml run integration_test
