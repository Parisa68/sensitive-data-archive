name: Functionality tests

on:
  push:
  merge_group:
  pull_request:

jobs:
  check_changes:
    outputs:
      sda-download: ${{ steps.changes.outputs.sda-download }}
      sftp-inbox: ${{ steps.changes.outputs.sftp-inbox }}
      sda-doa: ${{ steps.changes.outputs.sda-doa }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            sda-download:
              - 'sda-download/**'
            sftp-inbox:
            - 'sda-sftp-inbox/**'
            sda-doa:
            - 'sda-doa/**'

  sda-download:
    needs: check_changes
    if: needs.check_changes.outputs.sda-download == 'true'
    name: sda-download-integration-${{ matrix.storagetype }}
    runs-on: ubuntu-latest
    env:
      STORAGETYPE: ${{ matrix.storagetype }}

    strategy:
      matrix:
        storagetype: [s3, posix, s3notls]
      fail-fast: false
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Run setup scripts
        run: |
          cd sda-download
          ls -1 .github/integration/setup/{common,${{ matrix.storagetype }}}/*.sh 2>/dev/null | sort -t/ -k5 -n | while read -r runscript; do
            echo "Executing setup script $runscript";
            bash -x "$runscript";
          done

      - name: Run tests
        run: |
          cd sda-download
          ls -1 .github/integration/tests/{common,${{ matrix.storagetype }}}/*.sh 2>/dev/null | sort -t/ -k5 -n | while read -r runscript; do
            echo "Executing test script $runscript";
            bash -x "$runscript";
          done

  sftp-inbox:
    needs: check_changes
    if: needs.check_changes.outputs.sftp-inbox == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build image
        run: |
          cd sda-sftp-inbox
          docker build -t neicnordic/sda-inbox-sftp:latest .

      - name: Start Services
        run: |
          cd sda-sftp-inbox/dev_utils
          bash ./make_certs.sh
          docker compose up certfixer
          docker compose up -d
          sleep 20

      - name: Run test for sftp ssh connection
        run: |
          cd sda-sftp-inbox
          chmod 700 src/test/resources/id_ed25519
          sh ./dev_utils/sftp-testing-ssh.sh

      - name: Run test for sftp with password
        run: |
          cd sda-sftp-inbox
          sudo apt-get install expect -y
          sh ./dev_utils/sftp-testing-pass.sh

  sda-doa:
    name: sda-doa-integration-${{ matrix.storage-type }}
    needs: check_changes
    if: needs.check_changes.outputs.sda-doa == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sda-doa
    strategy:
      fail-fast: true
      matrix:
        storage-type: [s3, posix]
    env:
      PR_NUMBER: ${{ github.event.number }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4.5.0
        with:
          distribution: zulu
          java-version: 21
          cache: maven

      - name: create maven settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id":"github-fega-norway",
              "username": "${{github.actor}}",
              "password": "${{ secrets.GITHUB_TOKEN }}"
            }]

      - name: Copy settings.xml to sda-doa root
        shell: bash
        run: cp /home/runner/.m2/settings.xml ./settings.xml

      - name: Docker compose deploy for ${{ matrix.storage-type }} storage
        run: |
          docker compose -f ../.github/integration/sda-doa-${{ matrix.storage-type }}-outbox.yml run integration_test

      - name: SDA DOA Run Logs
        if: failure()
        run: docker logs doa

      - name: Docker Service Logs
        if: failure()
        run: |
          docker ps
